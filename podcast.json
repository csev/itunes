{
"site_title" : "Python for Everybody: Exploring Data in Python 3",
"site_url" : "http://www.py4e.com",
"site_podcast_owner_name" : "Dr. Charles Russell Severance",
"site_description" : "These are the lectures to suppliment textbook 'Python for Everybody' and the assicuated web site www.py4e.com",
"site_podcast_explicit" : "no",
"site_podcast_keywords" : "Python,Python3,Intro,Introductory,Beginning,Data,Datamining,Programming",
"site_podcast_image" : "http://pylearn.sites.uofmhosting.net/cover3.jpg",
"site_podcast_url" : "http://pylearn.sites.uofmhosting.net/media/video.xml",
"site_podcast_copyright" : "Dr. Charles R. Severance, CC-BY-NC",
"site_email" : "py4e@dr-chuck.com",
"post_base" : "http://pylearn.sites.uofmhosting.net/media/video",
"category_note" : "See: https://help.apple.com/itc/podcasts_connect/#/itc9267a2f12",
"categories" :[
    "Education/Training",
    "Technology/Software How-To"
],

"items" : {
"01-Intro-A-2016-11-14-3400.mov" : {
   "post_title" : "1.1 Why Program",
   "post_excerpt" : "Explore the nature of programming and how programming a computer is different than using a computer.",
   "post_file" : "01-Intro-A-2016-11-14-3400.mov",
   "post_date" : "Mon, 14 Nov 2016 05:00:00 -0000",
   "post_duration" : 750,
   "post_explicit" : "no"
},
"01-Intro-B-2016-11-14-3400.mov" : {
   "post_title" : "1.2 Hardware Architecture",
   "post_excerpt" : "In this lecture we learn abut how the computer processes and stores programs.  We learn about the CPU, Memory, Storage and Input / Output devices are brought together to write a program.",
   "post_file" : "01-Intro-B-2016-11-14-3400.mov",
   "post_date" : "Mon, 14 Nov 2016 05:00:00 -0000",
   "post_duration" : 735,
   "post_explicit" : "no"
},
"01-Intro-C-2016-11-14-3400.mov" : {
   "post_title" : "1.3 Python as a Language",
   "post_excerpt" : "We look at how writing programs is just another form of communication.  Instead of communicating with another person, we are communicating our ideas to a computer.",
   "post_file" : "01-Intro-C-2016-11-14-3400.mov",
   "post_date" : "Mon, 14 Nov 2016 05:00:00 -0000",
   "post_duration" : 468,
   "post_explicit" : "no"
},
"01-Intro-D-2016-11-14-3400.mov" : {
   "post_title" : "1.4 What do we Say to Python?",
   "post_excerpt" : "We look at the basics of the Python language and how we write code in Python to communicate sequential steps, conditional steps and repeated steps.",
   "post_file" : "01-Intro-D-2016-11-14-3400.mov",
   "post_date" : "Mon, 14 Nov 2016 05:00:00 -0000",
   "post_duration" : 765,
   "post_explicit" : "no"
},
"00-Python3-Mac-2016-12-30-3400.mov" : {
   "post_title" : "Installing Python 3 on a Macintosh",
   "post_excerpt" : "Installing Python 3 on a Macintosh",
   "post_file" : "00-Python3-Mac-2016-12-30-3400.mov",
   "post_date" : "Fri, 30 Dec 2016 05:00:00 -0000",
   "post_duration" : 262,
   "post_explicit" : "no"
},
"01-EX-hello.mp4" : {
   "post_title" : "Code Walkthrough: Hello World",
   "post_excerpt" : "Code Walkthrough: Hello World",
   "post_file" : "01-EX-hello.mp4",
   "post_date" : "Wed, 14 Sep 2016 04:00:00 -0000",
   "post_duration" : 312,
   "post_explicit" : "no"
},
"02-Expressions-A-2016-11-15-3400.mov" : {
   "post_title" : "2.1 Building Blocks of Python",
   "post_excerpt" : "We look at Python's reserved words, how we name and use variables, why we choose meaningful (mnemonic) variable names and how assignment statements function.",
   "post_file" : "02-Expressions-A-2016-11-15-3400.mov",
   "post_date" : "Wed, 16 Nov 2016 05:00:00 -0000",
   "post_duration" : 580,
   "post_explicit" : "no"
},
"02-Expressions-B-2016-11-15-3400.mov" : {
   "post_title" : "2.2 Expressions",
   "post_excerpt" : "We look at how we use various numerical and string operations to compute new information and store the new values in variables.",
   "post_file" : "02-Expressions-B-2016-11-15-3400.mov",
   "post_date" : "Wed, 16 Nov 2016 05:00:00 -0000",
   "post_duration" : 1192,
   "post_explicit" : "no"
},
"02-02-EX.mp4" : {
   "post_title" : "Code Walkthrough: Exercise 2.2",
   "post_excerpt" : "Code Walkthrough: Exercise 2.2",
   "post_file" : "02-02-EX.mp4",
   "post_date" : "Tue, 13 Sep 2016 04:00:00 -0000",
   "post_duration" : 371,
   "post_explicit" : "no"
},
"02-03-EX.mp4" : {
   "post_title" : "Code Walkthrough: Exercise 2.3",
   "post_excerpt" : "Code Walkthrough: Exercise 2.3",
   "post_file" : "02-03-EX.mp4",
   "post_date" : "Tue, 13 Sep 2016 04:00:00 -0000",
   "post_duration" : 468,
   "post_explicit" : "no"
},
"03-Conditional-A-2016-11-17-3400.mov" : {
   "post_title" : "3.1 If-Then-Else",
   "post_excerpt" : "The most basic conditional structure is the if statement where we either execute or skip a segment of code based on the results of a logical expression (i.e. asking a question).",
   "post_file" : "03-Conditional-A-2016-11-17-3400.mov",
   "post_date" : "Thu, 17 Nov 2016 05:00:00 -0000",
   "post_duration" : 809,
   "post_explicit" : "no"
},
"03-Conditional-B-2016-11-17-3400.mov" : {
   "post_title" : "3.2 More Conditional Statements",
   "post_excerpt" : "In this video we look at multi-branch if statements and the try-except concept where we can indicate a group of statements to be executed if something goes wrong with a block of statements.",
   "post_file" : "03-Conditional-B-2016-11-17-3400.mov",
   "post_date" : "Thu, 17 Nov 2016 05:00:00 -0000",
   "post_duration" : 831,
   "post_explicit" : "no"
},
"03-01-EX.mp4" : {
   "post_title" : "Code Walkthrough: Exercise 3.1",
   "post_excerpt" : "Code Walkthrough: Exercise 3.1",
   "post_file" : "03-01-EX.mp4",
   "post_date" : "Tue, 13 Sep 2016 04:00:00 -0000",
   "post_duration" : 726,
   "post_explicit" : "no"
},
"03-02-EX.mp4" : {
   "post_title" : "Code Walkthrough: Exercise 3.2",
   "post_excerpt" : "Code Walkthrough: Exercise 3.2",
   "post_file" : "03-02-EX.mp4",
   "post_date" : "Tue, 13 Sep 2016 04:00:00 -0000",
   "post_duration" : 565,
   "post_explicit" : "no"
},
"04-Functions-A-2016-11-21-3400.mov" : {
   "post_title" : "4.1 Using Pre-Defined Functions",
   "post_excerpt" : "We look at how code flows into and out of functions as well has how we pass information into functions and get results returned to us.",
   "post_file" : "04-Functions-A-2016-11-21-3400.mov",
   "post_date" : "Mon, 21 Nov 2016 05:00:00 -0000",
   "post_duration" : 629,
   "post_explicit" : "no"
},
"04-Functions-B-2016-11-21-3400.mov" : {
   "post_title" : "4.2 Building our Own Functions",
   "post_excerpt" : "We look at how to build our own functions using parameters and arguments as well as how we return results to the code that is calling our functions.",
   "post_file" : "04-Functions-B-2016-11-21-3400.mov",
   "post_date" : "Mon, 21 Nov 2016 05:00:00 -0000",
   "post_duration" : 754,
   "post_explicit" : "no"
},
"04-06-EX.mp4" : {
   "post_title" : "Code Walkthrough: Exercise 4.6",
   "post_excerpt" : "Code Walkthrough: Exercise 4.6",
   "post_file" : "04-06-EX.mp4",
   "post_date" : "Tue, 13 Sep 2016 04:00:00 -0000",
   "post_duration" : 607,
   "post_explicit" : "no"
},
"05-Iterations-A-2016-11-22-3400.mov" : {
   "post_title" : "5.1 The Basics of Loops",
   "post_excerpt" : "We loop at how we construct a loop so that it runs as long as we want it to run.  We learn about iteration variables and exiting loops with the 'break' and 'continue' statements.",
   "post_file" : "05-Iterations-A-2016-11-22-3400.mov",
   "post_date" : "Tue, 22 Nov 2016 05:00:00 -0000",
   "post_duration" : 598,
   "post_explicit" : "no"
},
"05-Iterations-B-2016-11-22-3400.mov" : {
   "post_title" : "5.2 Definite Loops",
   "post_excerpt" : "We learn how to use the 'for' statement in Python to loop through a set of data.",
   "post_file" : "05-Iterations-B-2016-11-22-3400.mov",
   "post_date" : "Tue, 22 Nov 2016 05:00:00 -0000",
   "post_duration" : 411,
   "post_explicit" : "no"
},
"05-Iterations-C-2016-11-22-3400.mov" : {
   "post_title" : "5.3 Patterns for Making Loops",
   "post_excerpt" : "Loops have a beginning, middle, and end.  We look ant how we construct a loop to look at a list of items one at a time so we can compute an overall maximum, minimum or average.",
   "post_file" : "05-Iterations-C-2016-11-22-3400.mov",
   "post_date" : "Tue, 22 Nov 2016 05:00:00 -0000",
   "post_duration" : 523,
   "post_explicit" : "no"
},
"05-Iterations-D-2016-11-22-3400.mov" : {
   "post_title" : "5.4 Loop Techniques",
   "post_excerpt" : "We continue to look at how to construct loops including how to do something special the first time through the loop.  We introduce the idea of 'None' which is a way to indicate that a variable is currently empty.",
   "post_file" : "05-Iterations-D-2016-11-22-3400.mov",
   "post_date" : "Wed, 23 Nov 2016 05:00:00 -0000",
   "post_duration" : 1127,
   "post_explicit" : "no"
},
"05-01-EX.mp4" : {
   "post_title" : "Worked Exercise: Exercise 5.1",
   "post_excerpt" : "Worked Exercise: Exercise 5.1",
   "post_file" : "05-01-EX.mp4",
   "post_date" : "Wed, 14 Sep 2016 04:00:00 -0000",
   "post_duration" : 510,
   "post_explicit" : "no"
},
"06-Strings-A-2016-11-28-3400.mov" : {
   "post_title" : "6.1 Storing Text Data in Strings",
   "post_excerpt" : "We learn how to create string variables and extract portions of the data as well as write simple loops to read through the characters in a string.",
   "post_file" : "06-Strings-A-2016-11-28-3400.mov",
   "post_date" : "Mon, 28 Nov 2016 05:00:00 -0000",
   "post_duration" : 642,
   "post_explicit" : "no"
},
"06-Strings-B-2016-11-28-3400.mov" : {
   "post_title" : "6.2 String Operations",
   "post_excerpt" : "We learn how to extract substrings using slicing, and use the string library to perform common data extraction operations with strings.",
   "post_file" : "06-Strings-B-2016-11-28-3400.mov",
   "post_date" : "Mon, 28 Nov 2016 05:00:00 -0000",
   "post_duration" : 1124,
   "post_explicit" : "no"
},
"06-05-EX.mp4" : {
   "post_title" : "Worked Example: Exercise 6.5",
   "post_excerpt" : "Worked Example: Exercise 6.5",
   "post_file" : "06-05-EX.mp4",
   "post_date" : "Wed, 14 Sep 2016 04:00:00 -0000",
   "post_duration" : 506,
   "post_explicit" : "no"
},
"07-Files-A-2016-11-28-3400.mov" : {
   "post_title" : "7.1 Reading Files",
   "post_excerpt" : "We look at how text and lines are represented in files, how we open a file and write a loop to read through all the lines in the file.",
   "post_file" : "07-Files-A-2016-11-28-3400.mov",
   "post_date" : "Mon, 28 Nov 2016 05:00:00 -0000",
   "post_duration" : 474,
   "post_explicit" : "no"
},
"07-Files-B-2016-11-28-3400.mov" : {
   "post_title" : "7.2 Processing Data in Files",
   "post_excerpt" : "We look at patterns for reading and processing the data in files.   We learn how to check for nonexistent files, and how we process each line within the file.",
   "post_file" : "07-Files-B-2016-11-28-3400.mov",
   "post_date" : "Mon, 28 Nov 2016 05:00:00 -0000",
   "post_duration" : 826,
   "post_explicit" : "no"
},
"07-01-EX.mp4" : {
   "post_title" : "Worked Example: Exercise 7.1",
   "post_excerpt" : "Worked Example: Exercise 7.1",
   "post_file" : "07-01-EX.mp4",
   "post_date" : "Wed, 14 Sep 2016 04:00:00 -0000",
   "post_duration" : 583,
   "post_explicit" : "no"
},
"08-Lists-A-2016-10-13-3400.mov" : {
   "post_title" : "8.1 Creating and Using Lists",
   "post_excerpt" : "We learn how to put data into lists, take data out of the list and write simple loops to examine the elements of a list.",
   "post_file" : "08-Lists-A-2016-10-13-3400.mov",
   "post_date" : "Fri, 21 Oct 2016 04:00:00 -0000",
   "post_duration" : 656,
   "post_explicit" : "no"
},
"08-Lists-B-2016-10-13-3400.mov" : {
   "post_title" : "8.2 Manipulating Lists",
   "post_excerpt" : "We learn about list slicing, list searching, and using pre-defined functions with lists.",
   "post_file" : "08-Lists-B-2016-10-13-3400.mov",
   "post_date" : "Fri, 21 Oct 2016 04:00:00 -0000",
   "post_duration" : 576,
   "post_explicit" : "no"
},
"08-Lists-C-2016-10-13-3400.mov" : {
   "post_title" : "8.3 Strings and Lists",
   "post_excerpt" : "We learn how to parse strings pull sub-strings out of a string using the split() function. ",
   "post_file" : "08-Lists-C-2016-10-13-3400.mov",
   "post_date" : "Fri, 21 Oct 2016 04:00:00 -0000",
   "post_duration" : 482,
   "post_explicit" : "no"
},
"08-EX-3400.mov" : {
   "post_title" : "Worked Exercise: Chapter 8",
   "post_excerpt" : "Strings, Files, Lists and the Guardian Pattern.",
   "post_file" : "08-EX-3400.mov",
   "post_date" : "Fri, 07 Oct 2016 04:00:00 -0000",
   "post_duration" : 693,
   "post_explicit" : "no"
},
"09-Dictionaries-A-2016-12-15-3400.mov" : {
   "post_title" : "9.1 Python Dictionaries",
   "post_excerpt" : "We compare and contrast how Python lists and dictionaries are structured internally.  How we use position to index lists and use keys to index dictionaries.",
   "post_file" : "09-Dictionaries-A-2016-12-15-3400.mov",
   "post_date" : "Fri, 16 Dec 2016 05:00:00 -0000",
   "post_duration" : 483,
   "post_explicit" : "no"
},
"09-Dictionaries-B-2016-12-15-3400.mov" : {
   "post_title" : "9.2 Building Histograms",
   "post_excerpt" : "We look at how we can use dictionaries to count the frequencies of many things at the same time.  We learn how the key and value are related in a dictionary and example the get method to retrieve values from a Python dictionary.",
   "post_file" : "09-Dictionaries-B-2016-12-15-3400.mov",
   "post_date" : "Fri, 16 Dec 2016 05:00:00 -0000",
   "post_duration" : 566,
   "post_explicit" : "no"
},
"09-Dictionaries-C-2016-12-15-3400.mov" : {
   "post_title" : "9.3 Counting Words in Text",
   "post_excerpt" : "In this segment we bring everything together, reading a file, parsing the lines, and computing the frequencies of the words in the file.  This is an important moment that pulls from everything we have learned so far.",
   "post_file" : "09-Dictionaries-C-2016-12-15-3400.mov",
   "post_date" : "Fri, 16 Dec 2016 05:00:00 -0000",
   "post_duration" : 714,
   "post_explicit" : "no"
},
"09-EX-3400.mov" : {
   "post_title" : "Worked Exercise: Dictionaries",
   "post_excerpt" : "Worked Exercise: Dictionaries",
   "post_file" : "09-EX-3400.mov",
   "post_date" : "Thu, 06 Oct 2016 04:00:00 -0000",
   "post_duration" : 1463,
   "post_explicit" : "no"
},
"10-Tuples-A-2016-12-16-3400.mov" : {
   "post_title" : "10.1 Understanding Tuples",
   "post_excerpt" : "We look at the basic syntax and capabilities of Python tuples.   We explore the concept of immutability, and we compare tuples to lists and strings.",
   "post_file" : "10-Tuples-A-2016-12-16-3400.mov",
   "post_date" : "Fri, 16 Dec 2016 05:00:00 -0000",
   "post_duration" : 587,
   "post_explicit" : "no"
},
"10-Tuples-B-2016-12-16-3400.mov" : {
   "post_title" : "10.2 Sorting Data",
   "post_excerpt" : "We look at how we sort lists, dictionaries, and lists of tuples in Python.",
   "post_file" : "10-Tuples-B-2016-12-16-3400.mov",
   "post_date" : "Fri, 16 Dec 2016 05:00:00 -0000",
   "post_duration" : 743,
   "post_explicit" : "no"
},
"10-EX-3400.mov" : {
   "post_title" : "Worked Example: Sorting Dictionaries",
   "post_excerpt" : "Worked Example: Sorting Dictionaries",
   "post_file" : "10-EX-3400.mov",
   "post_date" : "Thu, 06 Oct 2016 04:00:00 -0000",
   "post_duration" : 605,
   "post_explicit" : "no"
},
"11-RegEx-A-2016-12-06-3400.mov" : {
   "post_title" : "11.1 Introduction to Regular Expressions",
   "post_excerpt" : "We look at the syntax of regular expressions and how to use them to search through text data.",
   "post_file" : "11-RegEx-A-2016-12-06-3400.mov",
   "post_date" : "Fri, 16 Dec 2016 05:00:00 -0000",
   "post_duration" : 646,
   "post_explicit" : "no"
},
"11-RegEx-B-2016-12-06-3400.mov" : {
   "post_title" : "11.2 Matching and Extracting Data",
   "post_excerpt" : "In this segment we learn to pull out data from strings after a regular expression has found a match.",
   "post_file" : "11-RegEx-B-2016-12-06-3400.mov",
   "post_date" : "Fri, 16 Dec 2016 05:00:00 -0000",
   "post_duration" : 526,
   "post_explicit" : "no"
},
"11-RegEx-C-2016-12-06-3400.mov" : {
   "post_title" : "11.3 String Parsing with Regular Expressions",
   "post_excerpt" : "We look at how some of the string parsing we have done in earlier chapters can be easily done with regular expressions.",
   "post_file" : "11-RegEx-C-2016-12-06-3400.mov",
   "post_date" : "Sat, 17 Dec 2016 05:00:00 -0000",
   "post_duration" : 531,
   "post_explicit" : "no"
},
"12-HTTP-A-2016-12-19-3400.mov" : {
   "post_title" : "12.1 Network Technology (TCP/IP)",
   "post_excerpt" : "We take a very brief look at how software communicates across the Internet using TCP/IP.",
   "post_file" : "12-HTTP-A-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 463,
   "post_explicit" : "no"
},
"12-HTTP-B-2016-12-19-3400.mov" : {
   "post_title" : "12.2 Hypertext Transport Protocol (HTTP)",
   "post_excerpt" : "In this section we look at the HTTP protocol that is used to move documents between web servers and web browsers.",
   "post_file" : "12-HTTP-B-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 566,
   "post_explicit" : "no"
},
"12-HTTP-C-2016-12-19-3400.mov" : {
   "post_title" : "12.3 Building a Web Browser in Python",
   "post_excerpt" : "We write a simple Python program that connects to a web server and retrieves a web document.   It is a very simple web browser.",
   "post_file" : "12-HTTP-C-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 275,
   "post_explicit" : "no"
},
"12-socket1-2016-12-30-3400.mov" : {
   "post_title" : "Worked Example: Sockets",
   "post_excerpt" : "Worked Example: Sockets",
   "post_file" : "12-socket1-2016-12-30-3400.mov",
   "post_date" : "Fri, 30 Dec 2016 05:00:00 -0000",
   "post_duration" : 371,
   "post_explicit" : "no"
},
"12-HTTP-D-2016-12-19-3400.mov" : {
   "post_title" : "12.4 Unicode Characters and Strings",
   "post_excerpt" : "We explore how characters are encoded when they are transported across the network.",
   "post_file" : "12-HTTP-D-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 674,
   "post_explicit" : "no"
},
"12-HTTP-E-2016-12-19-3400.mov" : {
   "post_title" : "12.5 Retrieving Web Pages",
   "post_excerpt" : "We write an even simpler Python program to retrieve a web page using the urllib library in Python.",
   "post_file" : "12-HTTP-E-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 330,
   "post_explicit" : "no"
},
"12-urllib-2016-12-30-3400.mov" : {
   "post_title" : "Worked Example: Using urllib",
   "post_excerpt" : "Worked Example: Using urllib",
   "post_file" : "12-urllib-2016-12-30-3400.mov",
   "post_date" : "Fri, 30 Dec 2016 05:00:00 -0000",
   "post_duration" : 219,
   "post_explicit" : "no"
},
"12-HTTP-F-2016-12-19-3400.mov" : {
   "post_title" : "12.6 Parsing Web Pages",
   "post_excerpt" : "Now we will look at the HypertextMarkup Language (HTML) that we retrieved using Python and extract links form that HTML.  We are slowly building a very simple web search engine.",
   "post_file" : "12-HTTP-F-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 399,
   "post_explicit" : "no"
},
"12-urllinks-2016-12-30-3400.mov" : {
   "post_title" : "Worked Example: Parsing HTML",
   "post_excerpt" : "Worked Example: Parsing HTML using the BeautifulSoup library.",
   "post_file" : "12-urllinks-2016-12-30-3400.mov",
   "post_date" : "Fri, 30 Dec 2016 05:00:00 -0000",
   "post_duration" : 560,
   "post_explicit" : "no"
},
"13-Web-Services-A-2016-12-19-3400.mov" : {
   "post_title" : "13.1 Data on the Web",
   "post_excerpt" : "We look at two different ways to format data for transmission across the network including JavaScript Object Notation (JSON) and eXtended Markup Language (XML).",
   "post_file" : "13-Web-Services-A-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 168,
   "post_explicit" : "no"
},
"13-Web-Services-B-2016-12-19-3400.mov" : {
   "post_title" : "13.2 eXtensible Markup Language (XML)",
   "post_excerpt" : "We look at how data is represented using the XML format.",
   "post_file" : "13-Web-Services-B-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 342,
   "post_explicit" : "no"
},
"13-Web-Services-XML-2017-01-01-3400.mov" : {
   "post_title" : "Worked Example: XML",
   "post_excerpt" : "Worked Example: XML",
   "post_file" : "13-Web-Services-XML-2017-01-01-3400.mov",
   "post_date" : "Sun, 01 Jan 2017 05:00:00 -0000",
   "post_duration" : 366,
   "post_explicit" : "no"
},
"13-Web-Services-C-2016-12-19-3400.mov" : {
   "post_title" : "13.5 XML Schema",
   "post_excerpt" : "We look at how we can use XML Schema to determine whether or not a particular bit of XML is valid.",
   "post_file" : "13-Web-Services-C-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 848,
   "post_explicit" : "no"
},
"13-Web-Services-D-2016-12-19-3400.mov" : {
   "post_title" : "13.4 JavaScript Object Notation",
   "post_excerpt" : "We learn about the popular JSON data format and how to handle the JSON data in Python.",
   "post_file" : "13-Web-Services-D-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 388,
   "post_explicit" : "no"
},
"13-Web-Services-JSON-2017-01-01-3400.mov" : {
   "post_title" : "Worked Example: JSON",
   "post_excerpt" : "Worked Example: JSON",
   "post_file" : "13-Web-Services-JSON-2017-01-01-3400.mov",
   "post_date" : "Sun, 01 Jan 2017 05:00:00 -0000",
   "post_duration" : 350,
   "post_explicit" : "no"
},
"13-Web-Services-E-2016-12-19-3400.mov" : {
   "post_title" : "13.5 Service Oriented Approach (SOA)",
   "post_excerpt" : "We talk briefly about how applications can be built over time to depend on services provide other applications.",
   "post_file" : "13-Web-Services-E-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 121,
   "post_explicit" : "no"
},
"13-Web-Services-F-2016-12-19-3400.mov" : {
   "post_title" : "13.6 Using Application Programming Interfaces",
   "post_excerpt" : "We explore using a Google API that can be used to query location data and parse the JSON that is returned.",
   "post_file" : "13-Web-Services-F-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 424,
   "post_explicit" : "no"
},
"13-Web-Services-GeoJSON-2017-01-01-3400.mov" : {
   "post_title" : "Worked Example: GeoJSON",
   "post_excerpt" : "Worked Example: We access a Google Geocoding API using Python.",
   "post_file" : "13-Web-Services-GeoJSON-2017-01-01-3400.mov",
   "post_date" : "Sun, 01 Jan 2017 05:00:00 -0000",
   "post_duration" : 461,
   "post_explicit" : "no"
},
"13-Web-Services-G-2016-12-19-3400.mov" : {
   "post_title" : "13.7 Securing API Requests",
   "post_excerpt" : "We explore the use of OAuth to communicate sign requests to establish identity when using the Twitter API.",
   "post_file" : "13-Web-Services-G-2016-12-19-3400.mov",
   "post_date" : "Mon, 19 Dec 2016 05:00:00 -0000",
   "post_duration" : 611,
   "post_explicit" : "no"
},
"13-Web-Services-Twitter-2017-01-01-3400.mov" : {
   "post_title" : "Worked Example: Twitter and OAuth",
   "post_excerpt" : "Worked Example: Twitter and OAuth",
   "post_file" : "13-Web-Services-Twitter-2017-01-01-3400.mov",
   "post_date" : "Sun, 01 Jan 2017 05:00:00 -0000",
   "post_duration" : 1181,
   "post_explicit" : "no"
},
"14-Objects-A-2016-11-03-3400.mov" : {
   "post_title" : "14.1 Object Oriented Definitions and Terminology",
   "post_excerpt" : "We look at how Python mentions objects in its documentation as well as talk about why philosophy of object-oriented programming.  We explore some OO terms like class, object, instance, method, and attribute.",
   "post_file" : "14-Objects-A-2016-11-03-3400.mov",
   "post_date" : "Fri, 04 Nov 2016 04:00:00 -0000",
   "post_duration" : 639,
   "post_explicit" : "no"
},
"14-Objects-B-2016-11-03-3400.mov" : {
   "post_title" : "14.2 Our First Class and Object",
   "post_excerpt" : "We look at how use create a new class in Python and then construct a new object from that class.  We also look at some of the Python objects (like strings) that we have been using all along.",
   "post_file" : "14-Objects-B-2016-11-03-3400.mov",
   "post_date" : "Fri, 04 Nov 2016 04:00:00 -0000",
   "post_duration" : 498,
   "post_explicit" : "no"
},
"14-Objects-C-2016-11-03-3400.mov" : {
   "post_title" : "14.3 Object Life Cycle",
   "post_excerpt" : "We look at how we as the developers of a Python class can interact with the moment of construction and destruction of various objects created using the class.",
   "post_file" : "14-Objects-C-2016-11-03-3400.mov",
   "post_date" : "Fri, 04 Nov 2016 04:00:00 -0000",
   "post_duration" : 385,
   "post_explicit" : "no"
},
"14-Objects-D-2016-11-03-3400.mov" : {
   "post_title" : "14.4 Object Inheritance",
   "post_excerpt" : "We look at how we can make a new class by inheriting all of the attributes and methods of a parent class and then extend the new class with additional attributed and methods.",
   "post_file" : "14-Objects-D-2016-11-03-3400.mov",
   "post_date" : "Fri, 04 Nov 2016 04:00:00 -0000",
   "post_duration" : 457,
   "post_explicit" : "no"
},
"15-Databases-A-2016-12-20-3400.mov" : {
   "post_title" : "15.1 Relational Databases",
   "post_excerpt" : "We look at the history of database systems, learn the terminology of database systems, and review some of the common database systems that are in use.",
   "post_file" : "15-Databases-A-2016-12-20-3400.mov",
   "post_date" : "Wed, 21 Dec 2016 05:00:00 -0000",
   "post_duration" : 940,
   "post_explicit" : "no"
},
"15-Databases-B-2016-12-20-3400.mov" : {
   "post_title" : "15.2 Single Table SQL",
   "post_excerpt" : "We learn about how we can use Structured Query Language (SQL) to insert (create), read, update, and delete data in a single database table.",
   "post_file" : "15-Databases-B-2016-12-20-3400.mov",
   "post_date" : "Wed, 21 Dec 2016 05:00:00 -0000",
   "post_duration" : 606,
   "post_explicit" : "no"
},
"15-Databases-Twspider-2016-01-02-3400.mov" : {
   "post_title" : "Worked Example: Storing Twitter Data",
   "post_excerpt" : "We retrieve and store Twotter data in a database.",
   "post_file" : "15-Databases-Twspider-2016-01-02-3400.mov",
   "post_date" : "Mon, 02 Jan 2017 05:00:00 -0000",
   "post_duration" : 578,
   "post_explicit" : "no"
},
"15-Databases-C-2016-12-20-3400.mov" : {
   "post_title" : "15.3 Building a Relational Model",
   "post_excerpt" : "We look at how we can take the various data elements that will be modeled in an application and distribute them across several tables efficiently.  We learn about the basic rules of database design.",
   "post_file" : "15-Databases-C-2016-12-20-3400.mov",
   "post_date" : "Wed, 21 Dec 2016 05:00:00 -0000",
   "post_duration" : 523,
   "post_explicit" : "no"
},
"15-Databases-D-2016-12-20-3400.mov" : {
   "post_title" : "15.4 Database Key Types",
   "post_excerpt" : "We look at primary keys, logical keys and foreign keys.  We look at how foreign keys are represented in the database.",
   "post_file" : "15-Databases-D-2016-12-20-3400.mov",
   "post_date" : "Wed, 21 Dec 2016 05:00:00 -0000",
   "post_duration" : 245,
   "post_explicit" : "no"
},
"15-Databases-E-2016-12-20-3400.mov" : {
   "post_title" : "15.5 Representing Relationships in Database Tables",
   "post_excerpt" : "We look at how we map a logical database model to a physical database model by adding columns and constraints to model the table-to-table relationships.",
   "post_file" : "15-Databases-E-2016-12-20-3400.mov",
   "post_date" : "Wed, 21 Dec 2016 05:00:00 -0000",
   "post_duration" : 691,
   "post_explicit" : "no"
},
"15-Databases-F-2016-12-20-3400.mov" : {
   "post_title" : "15.6 Multi-Table Retrieval using JOIN",
   "post_excerpt" : "We look at how to reconstruct complete views of the data when data is properly distributed across multiple tables and connected via foreign keys.  We learn the JOIN operation and ON clause in SQL.",
   "post_file" : "15-Databases-F-2016-12-20-3400.mov",
   "post_date" : "Wed, 21 Dec 2016 05:00:00 -0000",
   "post_duration" : 629,
   "post_explicit" : "no"
},
"15-Databases-Tracks-2016-01-02-3400.mov" : {
   "post_title" : "Worked Example: Multiple Tracks",
   "post_excerpt" : "We work through a track data example with four tables.",
   "post_file" : "15-Databases-Tracks-2016-01-02-3400.mov",
   "post_date" : "Mon, 02 Jan 2017 05:00:00 -0000",
   "post_duration" : 838,
   "post_explicit" : "no"
},
"15-Databases-G-2016-12-20-3400.mov" : {
   "post_title" : "15.7 Many-to-Many Relationships",
   "post_excerpt" : "and courses in database tables.  We look at how to build a connector table to represent many-to-many relationships such as students and courses in database tables.  We also learn about composite primary keys.",
   "post_file" : "15-Databases-G-2016-12-20-3400.mov",
   "post_date" : "Wed, 21 Dec 2016 05:00:00 -0000",
   "post_duration" : 793,
   "post_explicit" : "no"
},
"15-Databases-Twfriends-2016-01-02-3400.mov" : {
   "post_title" : "Worked Example: Many-to-Many",
   "post_excerpt" : "We extend the Twitter example to represent friends using Many-to-Many relationships.",
   "post_file" : "15-Databases-Twfriends-2016-01-02-3400.mov",
   "post_date" : "Mon, 02 Jan 2017 05:00:00 -0000",
   "post_duration" : 1298,
   "post_explicit" : "no"
},
"16-Viz-A-2016-12-22-3400.mov" : {
   "post_title" : "16.1 Visualizing Map Data",
   "post_excerpt" : "In this assignment we make use of the Google GeoCoding API to look up addresses, store the data in a database and then use Google Maps to visualize the data.",
   "post_file" : "16-Viz-A-2016-12-22-3400.mov",
   "post_date" : "Thu, 22 Dec 2016 05:00:00 -0000",
   "post_duration" : 403,
   "post_explicit" : "no"
},
"16-Viz-Geodata-2016-01-03-3400.mov" : {
   "post_title" : "Worked Example: Retrieving Geocoded Data",
   "post_excerpt" : "Worked Example: Retrieving Geocoded Data",
   "post_file" : "16-Viz-Geodata-2016-01-03-3400.mov",
   "post_date" : "Tue, 03 Jan 2017 05:00:00 -0000",
   "post_duration" : 793,
   "post_explicit" : "no"
},
"16-Viz-B-2016-12-22-3400.mov" : {
   "post_title" : "16.2 Building a Web Search Engine",
   "post_excerpt" : "We build a web crawler that retrieves web pages and links from those pages an copies the pages into the database.  Once we have retrieved our web data we run a simple Page Rank algorithm on the data and visualize the results.",
   "post_file" : "16-Viz-B-2016-12-22-3400.mov",
   "post_date" : "Thu, 22 Dec 2016 05:00:00 -0000",
   "post_duration" : 684,
   "post_explicit" : "no"
},
"16-Viz-Page-Spider-2016-01-03-3400.mov" : {
   "post_title" : "Worked Example: A Web Crawler",
   "post_excerpt" : "Worked Example: A Web Crawler",
   "post_file" : "16-Viz-Page-Spider-2016-01-03-3400.mov",
   "post_date" : "Tue, 03 Jan 2017 05:00:00 -0000",
   "post_duration" : 1044,
   "post_explicit" : "no"
},
"16-Viz-Page-Rank-2016-01-03-3400.mov" : {
   "post_title" : "Worked Example: Running PageRank",
   "post_excerpt" : "Worked Example: Running PageRank",
   "post_file" : "16-Viz-Page-Rank-2016-01-03-3400.mov",
   "post_date" : "Tue, 03 Jan 2017 05:00:00 -0000",
   "post_duration" : 936,
   "post_explicit" : "no"
},
"16-Viz-Page-Viz-2016-01-03-3400.mov" : {
   "post_title" : "Worked Example: Visualizing PageRank",
   "post_excerpt" : "Worked Example: Visualizing PageRank",
   "post_file" : "16-Viz-Page-Viz-2016-01-03-3400.mov",
   "post_date" : "Tue, 03 Jan 2017 05:00:00 -0000",
   "post_duration" : 402,
   "post_explicit" : "no"
},
"16-Viz-C-2016-12-22-3400.mov" : {
   "post_title" : "16.3 Processing Mail Data",
   "post_excerpt" : "We end where we started, processing email data. Except that this time it is a lot (nearly 1GB) of email data.",
   "post_file" : "16-Viz-C-2016-12-22-3400.mov",
   "post_date" : "Thu, 22 Dec 2016 05:00:00 -0000",
   "post_duration" : 418,
   "post_explicit" : "no"
},
"16-Viz-Gmane-Spider-2016-01-03-3400.mov" : {
   "post_title" : "Worked Example: Retrieving Email Data",
   "post_excerpt" : "Worked Example: Retrieving Email Data",
   "post_file" : "16-Viz-Gmane-Spider-2016-01-03-3400.mov",
   "post_date" : "Tue, 03 Jan 2017 05:00:00 -0000",
   "post_duration" : 1020,
   "post_explicit" : "no"
},
"16-Viz-Gmane-Model-2016-01-03-3400.mov" : {
   "post_title" : "Worked Example: Cleaning and Modelling Mail Data",
   "post_excerpt" : "Worked Example: Cleaning and Modelling Mail Data",
   "post_file" : "16-Viz-Gmane-Model-2016-01-03-3400.mov",
   "post_date" : "Tue, 03 Jan 2017 05:00:00 -0000",
   "post_duration" : 775,
   "post_explicit" : "no"
},
"16-Viz-Gmane-Viz-2016-01-03-3400.mov" : {
   "post_title" : "Worked Example: Visualizing Mail Data",
   "post_excerpt" : "Worked Example: Visualizing Mail Data",
   "post_file" : "16-Viz-Gmane-Viz-2016-01-03-3400.mov",
   "post_date" : "Tue, 03 Jan 2017 05:00:00 -0000",
   "post_duration" : 812,
   "post_explicit" : "no"
}
}
}
